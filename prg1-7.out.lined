  1: ----- Otter 3.3f, August 2004 -----
  2: The process was started by root on www20363ui.sakura.ne.jp,
  3: Sat Sep 24 19:14:03 2016
  4: The command was "/root/automated_reasoning_puzzles/otter-scripts/otter".  The process ID is 4967.
  5: 
  6: set(hyper_res).
  7: set(order_history).
  8: WARNING: assign(max_proofs,1) already has that value.
  9: assign(max_proofs,1).
 10: 
 11: list(usable).
 12: 1 [] -Achievable(xb,xb,xg,xc)|Achievable(opp(xb),opp(xb),xg,xc).
 13: 2 [] -Achievable(xb,xw,xb,xc)|Achievable(opp(xb),xw,opp(xb),xc).
 14: 3 [] -Achievable(xb,xw,xg,xb)|Achievable(opp(xb),xw,xg,opp(xb)).
 15: 4 [] -Achievable(xb,xw,xg,xc)|Achievable(opp(xb),xw,xg,xc).
 16: end_of_list.
 17: 
 18: list(sos).
 19: 5 [] Achievable(bw,bw,bw,bw).
 20: end_of_list.
 21: 
 22: list(passive).
 23: 6 [] -Achievable(be,be,be,be).
 24: 7 [] Achievable(bw,be,be,xc).
 25: 8 [] Achievable(be,bw,bw,xc).
 26: 9 [] Achievable(bw,xw,be,be).
 27: 10 [] Achievable(be,xw,bw,bw).
 28: end_of_list.
 29: 
 30: list(demodulators).
 31: 11 [] opp(bw)=be.
 32: 12 [] opp(be)=bw.
 33: end_of_list.
 34: 
 35: ======= end of input processing =======
 36: 
 37: =========== start of search ===========
 38: 
 39: given clause #1: (wt=5) 5 [] Achievable(bw,bw,bw,bw).
 40: ** KEPT (pick-wt=5): 13 [hyper,2,5,demod,11,11] Achievable(be,bw,be,bw).
 41: 
 42: given clause #2: (wt=5) 13 [hyper,2,5,demod,11,11] Achievable(be,bw,be,bw).
 43: ** KEPT (pick-wt=5): 14 [hyper,4,13,demod,12] Achievable(bw,bw,be,bw).
 44: 
 45: given clause #3: (wt=5) 14 [hyper,4,13,demod,12] Achievable(bw,bw,be,bw).
 46: ** KEPT (pick-wt=5): 15 [hyper,3,14,demod,11,11] Achievable(be,bw,be,be).
 47: ** KEPT (pick-wt=5): 16 [hyper,1,14,demod,11,11] Achievable(be,be,be,bw).
 48: 
 49: given clause #4: (wt=5) 15 [hyper,3,14,demod,11,11] Achievable(be,bw,be,be).
 50: ** KEPT (pick-wt=5): 17 [hyper,2,15,demod,12,12] Achievable(bw,bw,bw,be).
 51: 
 52: given clause #5: (wt=5) 16 [hyper,1,14,demod,11,11] Achievable(be,be,be,bw).
 53: ** KEPT (pick-wt=5): 18 [hyper,2,16,demod,12,12] Achievable(bw,be,bw,bw).
 54: 
 55: given clause #6: (wt=5) 17 [hyper,2,15,demod,12,12] Achievable(bw,bw,bw,be).
 56: ** KEPT (pick-wt=5): 19 [hyper,1,17,demod,11,11] Achievable(be,be,bw,be).
 57: 
 58: given clause #7: (wt=5) 18 [hyper,2,16,demod,12,12] Achievable(bw,be,bw,bw).
 59: 
 60: given clause #8: (wt=5) 19 [hyper,1,17,demod,11,11] Achievable(be,be,bw,be).
 61: ** KEPT (pick-wt=5): 20 [hyper,4,19,demod,12] Achievable(bw,be,bw,be).
 62: 
 63: given clause #9: (wt=5) 20 [hyper,4,19,demod,12] Achievable(bw,be,bw,be).
 64: ** KEPT (pick-wt=5): 21 [hyper,2,20,demod,11,11] Achievable(be,be,be,be).
 65: 
 66: ----> UNIT CONFLICT at   0.00 sec ----> 22 [binary,21.1,6.1] $F.
 67: 
 68: Length of proof is 7.  Level of proof is 7.
 69: 
 70: ---------------- PROOF ----------------
 71: 
 72: 1 [] -Achievable(xb,xb,xg,xc)|Achievable(opp(xb),opp(xb),xg,xc).
 73: 2 [] -Achievable(xb,xw,xb,xc)|Achievable(opp(xb),xw,opp(xb),xc).
 74: 3 [] -Achievable(xb,xw,xg,xb)|Achievable(opp(xb),xw,xg,opp(xb)).
 75: 4 [] -Achievable(xb,xw,xg,xc)|Achievable(opp(xb),xw,xg,xc).
 76: 5 [] Achievable(bw,bw,bw,bw).
 77: 6 [] -Achievable(be,be,be,be).
 78: 11 [] opp(bw)=be.
 79: 12 [] opp(be)=bw.
 80: 13 [hyper,2,5,demod,11,11] Achievable(be,bw,be,bw).
 81: 14 [hyper,4,13,demod,12] Achievable(bw,bw,be,bw).
 82: 15 [hyper,3,14,demod,11,11] Achievable(be,bw,be,be).
 83: 17 [hyper,2,15,demod,12,12] Achievable(bw,bw,bw,be).
 84: 19 [hyper,1,17,demod,11,11] Achievable(be,be,bw,be).
 85: 20 [hyper,4,19,demod,12] Achievable(bw,be,bw,be).
 86: 21 [hyper,2,20,demod,11,11] Achievable(be,be,be,be).
 87: 22 [binary,21.1,6.1] $F.
 88: 
 89: ------------ end of proof -------------
 90: 
 91: 
 92: Search stopped by max_proofs option.
 93: 
 94: ============ end of search ============
 95: 
 96: -------------- statistics -------------
 97: clauses given                  9
 98: clauses generated             26
 99:   hyper_res generated         26
100: demod & eval rewrites         43
101: clauses wt,lit,sk delete       0
102: tautologies deleted            0
103: clauses forward subsumed      17
104:   (subsumed by sos)            1
105: unit deletions                 0
106: factor simplifications         0
107: clauses kept                   9
108: new demodulators               0
109: empty clauses                  1
110: clauses back demodulated       0
111: clauses back subsumed          0
112: usable size                   13
113: sos size                       1
114: demodulators size              2
115: passive size                   5
116: hot size                       0
117: Kbytes malloced              976
118: 
119: ----------- times (seconds) -----------
120: user CPU time          0.00          (0 hr, 0 min, 0 sec)
121: system CPU time        0.00          (0 hr, 0 min, 0 sec)
122: wall-clock time        0             (0 hr, 0 min, 0 sec)
123: 
124: That finishes the proof of the theorem.
125: 
126: Process 4967 finished Sat Sep 24 19:14:03 2016
