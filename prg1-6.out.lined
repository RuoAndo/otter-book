  1: ----- Otter 3.3f, August 2004 -----
  2: The process was started by root on www20363ui.sakura.ne.jp,
  3: Sat Sep 24 10:03:14 2016
  4: The command was "/root/automated_reasoning_puzzles/otter-scripts/otter".  The process ID is 4203.
  5: 
  6: set(binary_res).
  7:    dependent: set(factor).
  8:    dependent: set(unit_deletion).
  9: set(order_history).
 10: WARNING: assign(max_proofs,1) already has that value.
 11: assign(max_proofs,1).
 12: make_evaluable(_-_,$DIFF(_,_)).
 13: 
 14: list(usable).
 15: 1 [] -Achievable(bw,x,y)| -$GT(x,0)|Achievable(be,$DIFF(3,x),$DIFF(2,y)).
 16: 2 [] -Achievable(be,x,y)| -$GT(x,0)|Achievable(bw,$DIFF(3,x),$DIFF(2,y)).
 17: 3 [] -Achievable(bw,x,y)| -$GT(y,0)|Achievable(be,$DIFF(2,x),$DIFF(3,y)).
 18: 4 [] -Achievable(be,x,y)| -$GT(y,0)|Achievable(bw,$DIFF(2,x),$DIFF(3,y)).
 19: 5 [] -Achievable(bw,x,y)| -$GT(y,1)|Achievable(be,$DIFF(2,x),$DIFF(4,y)).
 20: 6 [] -Achievable(be,x,y)| -$GT(y,1)|Achievable(bw,$DIFF(2,x),$DIFF(4,y)).
 21: end_of_list.
 22: 
 23: list(sos).
 24: 7 [] Achievable(bw,2,2).
 25: end_of_list.
 26: 
 27: list(passive).
 28: 8 [] -Achievable(be,2,2).
 29: end_of_list.
 30: 
 31: ======= end of input processing =======
 32: 
 33: =========== start of search ===========
 34: 
 35: given clause #1: (wt=4) 7 [] Achievable(bw,2,2).
 36: ** KEPT (pick-wt=4): 9 [binary,7.1,5.1,demod,propositional] Achievable(be,0,2).
 37: ** KEPT (pick-wt=4): 10 [binary,7.1,3.1,demod,propositional] Achievable(be,0,1).
 38: ** KEPT (pick-wt=4): 11 [binary,7.1,1.1,demod,propositional] Achievable(be,1,0).
 39: 
 40: given clause #2: (wt=4) 9 [binary,7.1,5.1,demod,propositional] Achievable(be,0,2).
 41: ** KEPT (pick-wt=4): 12 [binary,9.1,4.1,demod,propositional] Achievable(bw,2,1).
 42: 
 43: given clause #3: (wt=4) 10 [binary,7.1,3.1,demod,propositional] Achievable(be,0,1).
 44: 
 45: given clause #4: (wt=4) 11 [binary,7.1,1.1,demod,propositional] Achievable(be,1,0).
 46: 
 47: given clause #5: (wt=4) 12 [binary,9.1,4.1,demod,propositional] Achievable(bw,2,1).
 48: ** KEPT (pick-wt=4): 13 [binary,12.1,1.1,demod,propositional] Achievable(be,1,1).
 49: 
 50: given clause #6: (wt=4) 13 [binary,12.1,1.1,demod,propositional] Achievable(be,1,1).
 51: ** KEPT (pick-wt=4): 14 [binary,13.1,4.1,demod,propositional] Achievable(bw,1,2).
 52: 
 53: given clause #7: (wt=4) 14 [binary,13.1,4.1,demod,propositional] Achievable(bw,1,2).
 54: ** KEPT (pick-wt=4): 15 [binary,14.1,5.1,demod,propositional] Achievable(be,1,2).
 55: ** KEPT (pick-wt=4): 16 [binary,14.1,1.1,demod,propositional] Achievable(be,2,0).
 56: 
 57: given clause #8: (wt=4) 15 [binary,14.1,5.1,demod,propositional] Achievable(be,1,2).
 58: ** KEPT (pick-wt=4): 17 [binary,15.1,4.1,demod,propositional] Achievable(bw,1,1).
 59: ** KEPT (pick-wt=4): 18 [binary,15.1,2.1,demod,propositional] Achievable(bw,2,0).
 60: 
 61: given clause #9: (wt=4) 16 [binary,14.1,1.1,demod,propositional] Achievable(be,2,0).
 62: 
 63: given clause #10: (wt=4) 17 [binary,15.1,4.1,demod,propositional] Achievable(bw,1,1).
 64: ** KEPT (pick-wt=4): 19 [binary,17.1,1.1,demod,propositional] Achievable(be,2,1).
 65: 
 66: given clause #11: (wt=4) 18 [binary,15.1,2.1,demod,propositional] Achievable(bw,2,0).
 67: 
 68: given clause #12: (wt=4) 19 [binary,17.1,1.1,demod,propositional] Achievable(be,2,1).
 69: ** KEPT (pick-wt=4): 20 [binary,19.1,4.1,demod,propositional] Achievable(bw,0,2).
 70: 
 71: given clause #13: (wt=4) 20 [binary,19.1,4.1,demod,propositional] Achievable(bw,0,2).
 72: ** KEPT (pick-wt=4): 21 [binary,20.1,5.1,demod,propositional] Achievable(be,2,2).
 73: 
 74: ----> UNIT CONFLICT at   0.00 sec ----> 22 [binary,21.1,8.1] $F.
 75: 
 76: Length of proof is 9.  Level of proof is 9.
 77: 
 78: ---------------- PROOF ----------------
 79: 
 80: 1 [] -Achievable(bw,x,y)| -$GT(x,0)|Achievable(be,$DIFF(3,x),$DIFF(2,y)).
 81: 4 [] -Achievable(be,x,y)| -$GT(y,0)|Achievable(bw,$DIFF(2,x),$DIFF(3,y)).
 82: 5 [] -Achievable(bw,x,y)| -$GT(y,1)|Achievable(be,$DIFF(2,x),$DIFF(4,y)).
 83: 7 [] Achievable(bw,2,2).
 84: 8 [] -Achievable(be,2,2).
 85: 9 [binary,7.1,5.1,demod,propositional] Achievable(be,0,2).
 86: 12 [binary,9.1,4.1,demod,propositional] Achievable(bw,2,1).
 87: 13 [binary,12.1,1.1,demod,propositional] Achievable(be,1,1).
 88: 14 [binary,13.1,4.1,demod,propositional] Achievable(bw,1,2).
 89: 15 [binary,14.1,5.1,demod,propositional] Achievable(be,1,2).
 90: 17 [binary,15.1,4.1,demod,propositional] Achievable(bw,1,1).
 91: 19 [binary,17.1,1.1,demod,propositional] Achievable(be,2,1).
 92: 20 [binary,19.1,4.1,demod,propositional] Achievable(bw,0,2).
 93: 21 [binary,20.1,5.1,demod,propositional] Achievable(be,2,2).
 94: 22 [binary,21.1,8.1] $F.
 95: 
 96: ------------ end of proof -------------
 97: 
 98: 
 99: Search stopped by max_proofs option.
100: 
101: ============ end of search ============
102: 
103: -------------- statistics -------------
104: clauses given                 13
105: clauses generated             37
106:   binary_res generated        37
107:   factors generated            0
108: demod & eval rewrites        111
109: clauses wt,lit,sk delete       0
110: tautologies deleted           13
111: clauses forward subsumed      11
112:   (subsumed by sos)            0
113: unit deletions                 0
114: factor simplifications         0
115: clauses kept                  13
116: new demodulators               0
117: empty clauses                  1
118: clauses back demodulated       0
119: clauses back subsumed          0
120: usable size                   19
121: sos size                       1
122: demodulators size              0
123: passive size                   1
124: hot size                       0
125: Kbytes malloced              976
126: 
127: ----------- times (seconds) -----------
128: user CPU time          0.00          (0 hr, 0 min, 0 sec)
129: system CPU time        0.00          (0 hr, 0 min, 0 sec)
130: wall-clock time        0             (0 hr, 0 min, 0 sec)
131: 
132: That finishes the proof of the theorem.
133: 
134: Process 4203 finished Sat Sep 24 10:03:14 2016
