  1: set(hyper_res).
  2: set(prolog_style_variables).
  3: %clear(back_sub).
  4: %clear(for_sub).
  5: assign(max_proofs, -1).
  6: 
  7: op(900, xfx, ||).
  8: op(900, xfx, &&).
  9: make_evaluable(_-_, $DIFF(_,_)).
 10: make_evaluable(_+_, $SUM(_,_)).
 11: make_evaluable(_<_, $LT(_,_)).
 12: make_evaluable(_<=_, $LE(_,_)).
 13: make_evaluable(_>_, $GT(_,_)).
 14: make_evaluable(_>=_, $GE(_,_)).
 15: make_evaluable(_==_, $EQ(_,_)).
 16: make_evaluable(_&&_, $AND(_,_)).
 17: make_evaluable(_||_, $OR(_,_)).
 18: make_evaluable(_*_, $PROD(_,_)).
 19: 
 20: list(usable).
 21: PICK(0).
 22: PICK(1).
 23: PICK(2).
 24: PICK(3).
 25: PICK(4).
 26: PICK(5).
 27: PICK(6).
 28: 
 29: -solvable(state(hls(XHLS),hs(XHS),ls(XLS),s(XS),rem(XREM)))
 30: | -PICK(YHLS)
 31: | -PICK(YHS)
 32: | -PICK(YLS)
 33: | -PICK(YS)
 34: | -$LE(YHLS,XHLS)
 35: | -$LE(YHS,XHS)
 36: | -$LE(YLS,XLS)
 37: | -$LE(YS,XS)
 38: | -$GT(YHLS+YHS+YLS+YS,0)
 39: | -$LE(YHLS+YHS+YLS+YS,6)
 40: | -PICK(ZHLS)
 41: | -PICK(ZHS)
 42: | -PICK(ZLS)
 43: | -$LE(ZHLS+YHLS,XHLS)
 44: | -$LE(ZHS+YHS,XHS)
 45: | -$LE(ZLS+YLS,XLS)
 46: | -$GE(XREM,0)
 47: | -$EQ(YHLS+YHS+YLS+YS,ZHLS+ZHS+ZLS)
 48: | -$LE(ZHLS+ZHS+YHLS+YLS,$DIV(3,XREM-1))
 49: | -$LE(ZHLS+ZLS+YHLS+YHS,$DIV(3,XREM-1))
 50: | -$LE($PROD(2,$DIFF(XHLS,(YHLS+ZHLS))+$DIFF(XHS,(YHS+ZHS))+$DIFF(XLS,(YLS+ZLS))),$DIV(3,XREM-1))
 51: | RECORD(parent(state(hls(XHLS),hs(XHS),ls(XLS),s(XS),rem(XREM))),
 52: left(state(hls(0),hs(ZHLS+ZHS),ls(YHLS+YLS),s($DIFF(XHLS,(YHLS+ZHLS))+$DIFF(XHS,ZHS)+$DIFF(XLS,YLS)+XS),rem(XREM-1))),
 53: right(state(hls(0),hs(YHLS+YHS),ls(ZHLS+ZLS),s($DIFF(XHLS,(ZHLS+YHLS))+$DIFF(XHS,YHS)+$DIFF(XLS,ZLS)+XS),rem(XREM-1))),
 54: balance(state(hls($DIFF(XHLS,(YHLS+ZHLS))),hs($DIFF(XHS,(YHS+ZHS))),ls($DIFF(XLS,(YLS+ZLS))),s(XS+YHLS+ZHLS+YHS+ZHS+YLS+ZLS),rem(XREM-1)))).
 55: 
 56: -solvable(state(hls(0),hs(1),ls(0),s(10),rem(0))).
 57: -solvable(state(hls(0),hs(0),ls(1),s(10),rem(0))).
 58: -solvable(state(hls(0),hs(0),ls(0),s(10),rem(0))).
 59: 
 60: -RECORD(parent(XP),left(XL),right(XR),balance(XBAL))| solvable(XL).
 61: -RECORD(parent(XP),left(XL),right(XR),balance(XBAL))| solvable(XR).
 62: -RECORD(parent(XP),left(XL),right(XR),balance(XBAL))| solvable(XBAL).
 63: 
 64: -RECORD(parent(XP),left(XL),right(XR),balance(XBAL)) | -solvable(XL) | -solvable(XR) 
 65: | -solvable(XBAL) | solvable(XP).
 66: 
 67: end_of_list.
 68: 
 69: list(sos).
 70: solvable(state(hls(11),hs(0),ls(0),s(0),rem(3))).
 71: end_of_list.
